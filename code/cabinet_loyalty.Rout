
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Load dependencies
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.5     ✔ dplyr   1.0.7
✔ tidyr   1.1.4     ✔ stringr 1.4.0
✔ readr   2.0.2     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(rio)
> library(lubridate)

Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

> library(lfe)
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

> library(devtools)
Loading required package: usethis
> library(stringr)
> source_url("https://raw.githubusercontent.com/tobiasnowacki/RTemplates/master/plottheme.R")
ℹ SHA-1 hash of file is 24d50dc41518460caa7dd1e4f46697f9eb053e29
Registering fonts with R
Loading required package: viridisLite
> 
> source("code/0_functions.R")
ℹ SHA-1 hash of file is 24d50dc41518460caa7dd1e4f46697f9eb053e29
> 
> ## ------------
> ## LOAD DATA
> ## ------------
> 
> whip2 <- import("output/mod_data/whip_es.csv") %>%
+   select(-V1)
> # cand_cab <- import("output/mod_data/candidates_cabinet.csv")
> steps = import("output/mod_data/stepping_offices_by_term.csv")
> 
> ## --------------
> ## PREPARE DATA
> ## --------------
> 
> # Create indicator whether MP will ever have high office
> mg = steps %>%
+   left_join(whip2) %>%
+   group_by(member_id) %>%
+   mutate(ever_high_office = ifelse(
+     sum(ever_cabinet == 1, na.rm = TRUE) > 0 | 
+     sum(ever_step == 1, na.rm = TRUE) > 0, 
+     1, 0))
Joining, by = c("member_id", "year")
> 
> high_office_df <- mg %>%
+         filter(already_cabinet == FALSE & 
+               is_govt == TRUE, 
+                year <= 1918) %>%
+         group_by(year, ever_high_office) %>%
+         summarise(
+                   cohesion_score = mean(cohesion, na.rm = TRUE),
+                   elec_mean = mean(win_fut, na.rm = TRUE),
+                   # score_mean = mean(score_inverse, na.rm = TRUE),
+                  n = n()) %>%
+         ungroup() %>%
+         filter(year != 1885) %>%
+         mutate(yrgrp = ifelse(year < 1885, 0, 1))
`summarise()` has grouped output by 'year'. You can override using the `.groups` argument.
> 
> table(mg$year, mg$is_govt)
      
       FALSE TRUE
  1835     0  370
  1837   177  192
  1841     0  374
  1847     0  375
  1852     0  387
  1857     0  378
  1859   175  205
  1865     0  393
  1868   170  233
  1874   149  246
  1880   165  202
  1885     0  396
  1886   148  289
  1892   234  210
  1895   140  313
  1900   150  313
  1906   117  313
  1910   218  227
  1911   218  225
  1918   439    0
  1922   363    0
  1923   368    0
  1924   407    0
> 
> ## -------------
> ## PLOT
> ## -------------
> 
> 
> 
> plot_high <- ggplot(high_office_df, aes(year, cohesion_score)) +
+  geom_smooth(aes(lty = as.factor(ever_high_office)), se = FALSE,
+    colour = "black", lwd = 0.5) +
+   # geom_line(aes(lty = as.factor(ever_high_office_uncond)), 
+     # colour = "black", lwd = 0.5) +
+   geom_line(aes(group = year), alpha = 0.1) +
+   geom_point(aes(shape = as.factor(ever_high_office)), alpha = 0.5) +
+   geom_vline(xintercept = c(1867.5, 1884.5), lty = "dotted") +
+   theme_tn() +
+   xlim(1835, 1911) +
+   labs(x = "Year", y = "Mean Agreement Rate", lty = "High Office Now Or in Future?", shape = "High Office Now Or in Future?")
> ggsave(plot_high, 
+   file = "output/figures/stepping_whip.pdf",
+   width = 4, height = 4, device = cairo_pdf)
`geom_smooth()` using method = 'loess' and formula 'y ~ x'
Warning messages:
1: Removed 4 rows containing non-finite values (stat_smooth). 
2: Removed 4 row(s) containing missing values (geom_path). 
3: Removed 4 rows containing missing values (geom_point). 
> 
> 
> plot_highval <-ggplot(high_office_df, aes(year, elec_mean)) +
+  geom_smooth(aes(lty = as.factor(ever_high_office)), se = FALSE,
+    colour = "black", lwd = 0.5) +
+   geom_line(aes(group = year), alpha = 0.1) +
+   geom_point(aes(shape = as.factor(ever_high_office)), alpha = 0.5) +
+   geom_vline(xintercept = c(1867.5, 1884.5), lty = "dotted") +
+   theme_tn() +
+   xlim(1835, 1920) +
+   labs(x = "Year", y = "Share Re-Elected", lty = "High Office Now Or in Future?", shape = "High Office Now Or in Future?")
> ggsave(plot_highval, 
+   file = "output/figures/stepping_reelec.pdf",
+   width = 4, height = 4, device = cairo_pdf)
`geom_smooth()` using method = 'loess' and formula 'y ~ x'
> 
> 
> proc.time()
   user  system elapsed 
  3.313   0.311   3.782 
