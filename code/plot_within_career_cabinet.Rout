
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## Script to analyse seat safety before and after appointment to Cabinet
> ## AUGUST 2021
> ## Toby Nowacki
> 
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.5     ✔ dplyr   1.0.7
✔ tidyr   1.1.4     ✔ stringr 1.4.0
✔ readr   2.0.2     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(devtools)
Loading required package: usethis
> library(rio)
> source_url("https://raw.githubusercontent.com/tobiasnowacki/RTemplates/master/plottheme.R")
ℹ SHA-1 hash of file is 24d50dc41518460caa7dd1e4f46697f9eb053e29
Registering fonts with R
Loading required package: viridisLite
> 
> # Load data ----
> within_dat <- import("output/mod_data/within_career.csv") %>%
+     filter(!is.na(grp), !is.na(party_pruned), year >= 1832, year < 1918)
> steps <- import("output/mod_data/stepping_offices_by_term.csv")
> 
> # Merge data ----
> mergedat <- within_dat %>%
+     left_join(steps, by = c("member_id", "year")) %>%
+     group_by(member_id) %>%
+     # Identify and keep those who ever served in Cabinet whilst elected
+     mutate(ever_cabinet = sum(in_cabinet, na.rm = TRUE) > 0) %>%
+     filter(ever_cabinet == TRUE) %>%
+     mutate(first_cabinet = min(year[in_cabinet == TRUE], na.rm = TRUE)) %>%
+     mutate(
+         term = row_number(),
+         cab_term = term[year == first_cabinet],
+         grp_term = grp[year == first_cabinet],
+         term_diff = term - cab_term
+     ) %>%
+     # Only keep instances in the same era
+     filter(grp == grp_term)
> 
> # Aggregate up ----
> aggdat <- mergedat %>%
+     group_by(grp, term_diff) %>%
+     summarise(
+         avg_safety = mean(party_safety, na.rm = TRUE)
+     ) %>%
+     filter(abs(term_diff) < 3) %>%
+     filter(grp != "1868 - 1880") # Exclude noisy middle
`summarise()` has grouped output by 'grp'. You can override using the `.groups` argument.
> 
> # Plot ----
> ggplot(aggdat, aes(x = term_diff, y = avg_safety)) +
+     geom_vline(xintercept = 0, lty = "dotted") +
+     geom_line(aes()) +
+     geom_point(aes()) +
+     facet_wrap(. ~ grp) +
+     labs(x = "Terms Since Cabinet", y = "Avg Safety") +
+     scale_y_continuous(limits = c(0, 1)) +
+     theme_tn()
There were 50 or more warnings (use warnings() to see the first 50)
> # Export plot
> ggsave("output/figures/within_cabinet_safety.pdf",
+     width = 6, height = 4,
+     device = cairo_pdf
+ )
> 
> proc.time()
   user  system elapsed 
  2.595   0.234   2.930 
